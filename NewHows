package com.example.sql;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;

import java.util.ArrayList;
import java.util.HashMap;

public class database extends SQLiteOpenHelper {
    private static final int DB_VERSION = 1;
    private static final String DB_NAME = "ogrencilerveritabani";
    private static final String TABLE_Adi = "Ã¶grencilerim";
    private static final String KEY_ID = "id";
    private static final String KEY_NAME = "adi";
    private static final String KEY_Vize = "vize";
    private static final String KEY_Final = "final";
    private static final String KEY_Bnot = "basari";
    public database(Context context){
        super(context,DB_NAME, null, DB_VERSION);
    }
    @Override
    public void onCreate(SQLiteDatabase db) {
        String CREATE_TABLE = "CREATE TABLE " + TABLE_Adi + "("
                + KEY_ID + " INTEGER PRIMARY KEY AUTOINCREMENT," + KEY_NAME + " TEXT,"
                + KEY_Vize + " INTEGER,"
                + KEY_Final + " INTEGER,"
                + KEY_Bnot + " INTEGER" + ")";
        db.execSQL(CREATE_TABLE);
    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
        db.execSQL("DROP TABLE IF EXISTS " + TABLE_Adi);
        onCreate(db);
    }
    void insertOgrenci(String adi, int vize, int finals, int basarinotu){
        //Get the Data Repository in write mode
        SQLiteDatabase db = this.getWritableDatabase();
        //Create a new map of values, where column names are the keys
        ContentValues cValues = new ContentValues();
        cValues.put(KEY_NAME, adi);
        cValues.put(KEY_Vize, vize);
        cValues.put(KEY_Final, finals);
        cValues.put( KEY_Bnot,basarinotu );
        // Insert the new row, returning the primary key value of the new row
        long newRowId = db.insert(TABLE_Adi,null, cValues);
        db.close();
    }
    public ArrayList<HashMap<String, String>> GetOgrenciler(){
        SQLiteDatabase db = this.getWritableDatabase();
        ArrayList<HashMap<String, String>> userList = new ArrayList<>();
        String query = "SELECT id,adi, vize, final,basari FROM "+ TABLE_Adi;
        Cursor cursor = db.rawQuery(query,null);
        while (cursor.moveToNext()){
            HashMap<String,String> user = new HashMap<>();
            user.put("id",cursor.getString(cursor.getColumnIndex(KEY_ID)));
            user.put("adi",cursor.getString(cursor.getColumnIndex(KEY_NAME)));
            user.put("vize",cursor.getString(cursor.getColumnIndex(KEY_Vize)));
            user.put("final",cursor.getString(cursor.getColumnIndex(KEY_Final)));
            user.put("basari",cursor.getString(cursor.getColumnIndex(KEY_Bnot)));
            userList.add(user);
        }
        return  userList;
    }
    public void DeleteOgrenci(int ogrenciId){
        SQLiteDatabase db = this.getWritableDatabase();
        db.delete(TABLE_Adi, KEY_ID+" = ?",new String[]{String.valueOf(ogrenciId)});
        db.close();
    }
    // Update User Details
    public int UpdateUserDetails(String vize, String finali, int id){
        SQLiteDatabase db = this.getWritableDatabase();
        ContentValues cVals = new ContentValues();
        cVals.put(KEY_Vize, vize);
        cVals.put(KEY_Final, finali);
        int count = db.update(TABLE_Adi, cVals, KEY_ID+" = ?",new String[]{String.valueOf(id)});
        return  count;
    }
}
